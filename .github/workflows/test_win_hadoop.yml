name: Hadoop on Windows

on:
  push:
    branches:
      - main

jobs:
  setup-hadoop:
    runs-on: windows-latest
    env:
      HADOOP_HOME: "${{ github.workspace }}\\hadoop"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Java JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11' # Compatible w/Hadoop
        distribution: 'temurin'

    - name: Download Hadoop
      run: |
        echo "Downloading Hadoop"
        curl -O https://dlcdn.apache.org/hadoop/common/hadoop-3.3.6/hadoop-3.3.6.tar.gz
        tar -xvf hadoop-3.3.6.tar.gz
        move hadoop-3.3.6 "${{ github.workspace }}\\hadoop"

    - name: Setup Hadoop Environment
      run: |
        echo "## Configuring Hadoop Environment"
        echo "HADOOP_HOME=${{ env.HADOOP_HOME }}" >> $GITHUB_ENV
        echo "PATH=%PATH%;${{ env.HADOOP_HOME }}\\bin" >> $GITHUB_ENV
        echo "Environment variables configured."

    - name: Verify HADOOP_HOME
      run: |
        echo "Verifying HADOOP_HOME"
        echo HADOOP_HOME is ${{ env.HADOOP_HOME }}
        dir "${{ env.HADOOP_HOME }}"

    - name: List HADOOP_HOME Contents
      run: |
        echo "Listing contents of HADOOP_HOME"
        dir "${{ env.HADOOP_HOME }}"
 
    - name: Check and Start Hadoop Services
      run: |
        echo "## Checking if Hadoop services are running"
        $namenode = Get-Process -Name "java" -ErrorAction SilentlyContinue | Where-Object { $_.Path -like "*hadoop*" -and $_.CommandLine -like "*namenode*" }
        $datanode = Get-Process -Name "java" -ErrorAction SilentlyContinue | Where-Object { $_.Path -like "*hadoop*" -and $_.CommandLine -like "*datanode*" }

        if (-not $namenode) {
          Write-Output "Namenode is not running. Starting..."
          Start-Process -NoNewWindow -FilePath "cmd.exe" -ArgumentList "/C start /B $env:HADOOP_HOME\sbin\start-dfs.cmd"
        } else {
          Write-Output "Namenode is already running."
        }

        if (-not $datanode) {
          Write-Output "Datanode is not running. Starting..."
        } else {
          Write-Output "Datanode is already running."
        }

        Write-Output "Hadoop services status check complete."